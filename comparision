import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report

# Load the data and preprocess the text
data = pd.read_csv('mbti_1.csv')
vectorizer = TfidfVectorizer(max_features=5000, stop_words='english')
X = vectorizer.fit_transform(data['posts'])
y = data['type']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Logistic Regression model
lr = LogisticRegression(max_iter=1000)
lr.fit(X_train, y_train)
lr_y_pred = lr.predict(X_test)

# Train an XGBoost model
xgb = XGBClassifier()
xgb.fit(X_train, y_train)
xgb_y_pred = xgb.predict(X_test)

# Evaluate the performance of the models
print("Logistic Regression Results:")
print(classification_report(y_test, lr_y_pred))

print("XGBoost Results:")
print(classification_report(y_test, xgb_y_pred))
